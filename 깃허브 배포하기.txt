깃허브 배포하기
moonjongjs
moonjong0108#
0. 깃허브 브라우저 열고 로그인 > 리파지토리 만들기

web_kurly_8

https://github.com/moonjongjs/web_kurly_8.git

1. 폴더명 파일명 공백없이 글자길이 250자 이하로 준비 
2. 깃설정 
$ git init

3. 깃환경설정
$ git config user.name 'moonjongjs'
$ git config user.email 'moonseonjong@naver.com'

4. 깃 리모트 오리진 추가하기 : 리파지토리 생성 복제 붙이기
https://github.com/moonjongjs/web_kurly_8.git

$ git remote add origin https://github.com/moonjongjs/web_kurly_8.git


5. 깃 스테이징
$ git add .


6. 깃 커밋하기
$ git commit -m "마켓컬리 웹개발"



7. 깃 푸쉬하기
$ git push origin master


8. 배포주소 URL => package.json 에 등록하기
   "homepage" : "https://moonjongjs.github.io/web_kurly_8/"

9. 웹페이지 배포 패키지(gh-pages) 설치 : gh-pages

npm install gh-pages


10. 설치하고 package.json 열기
"scripts": {} 내용 변경하기

 "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },

=>

 "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",

    "predeploy": "npm run build",
    "deploy": "gh-pages  -b  master -d  build"
  },



11. 배포 실행하기
$ npm run deploy


  https://cra.link/deployment


> app@0.1.0 deploy
> gh-pages -b  master -d  build

Published

12. 완료 => 깃허브 리파지토리 => 새로고침
13. 